<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.noorigun.suggestion.poll.PollStatisticsDao">

    <resultMap id="PollStatisticsResultMap" type="kr.co.noorigun.vo.PollStatisticsVO">
        <result property="option_text" column="option_text"/>
        <result property="vote_count" column="vote_count"/>
        <result property="poll_title" column="poll_title"/>
        <result property="end_date" column="end_date"/>
        <result property="allow_multiple" column="allow_multiple"/>
        <result property="sbnum" column="sbnum"/>
    </resultMap>

    <!-- 1. 기본 투표 통계 -->
    <!-- <select id="getPollStatistics" resultMap="PollStatisticsResultMap">
        SELECT 
            po.text AS option_text,
            NVL(po.votes, 0) AS vote_count,
            p.title AS poll_title,
            TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
            CASE 
                WHEN p.allow_multiple = 1 THEN 1
                ELSE 0
            END AS allow_multiple
        FROM poll p
        LEFT JOIN poll_option po ON p.id = po.poll_id
        WHERE po.text IS NOT NULL
    </select> -->

<!-- <select id="getPollStatistics" resultMap="PollStatisticsResultMap">
    SELECT * 
    FROM (
        SELECT 
            ROW_NUMBER() OVER (ORDER BY NVL(po.votes, 0) DESC) AS rn,
            po.text AS option_text,
            NVL(po.votes, 0) AS vote_count,
            p.title AS poll_title,
            TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
            CASE 
                WHEN p.allow_multiple = 1 THEN 1
                ELSE 0
            END AS allow_multiple
        FROM poll p
        LEFT JOIN poll_option po ON p.id = po.poll_id
        WHERE po.text IS NOT NULL
    )
    WHERE rn BETWEEN #{startRow} AND #{endRow} 
</select> -->
    
    <select id="getPollStatistics" resultMap="PollStatisticsResultMap">
    SELECT 
        po.text AS option_text,
        NVL(po.votes, 0) AS vote_count,
        p.title AS poll_title,
        TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
        CASE 
            WHEN p.allow_multiple = 1 THEN 1
            ELSE 0
        END AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll p
    LEFT JOIN poll_option po ON p.id = po.poll_id
    WHERE po.text IS NOT NULL
    ORDER BY NVL(po.votes, 0) DESC
</select>

  <!-- 투표율 통계 쿼리 -->
<select id="getPollParticipationRate" resultMap="PollStatisticsResultMap">
    SELECT 
        NULL AS option_text, 
        ROUND((SUM(NVL(po.votes, 0)) / NULLIF(MAX(s.hit), 0)) * 100, 2) AS vote_count, 
        p.title AS poll_title, 
        NULL AS end_date, 
        NULL AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll p
    LEFT JOIN poll_option po ON p.id = po.poll_id
    LEFT JOIN suggestion s ON p.sbnum = s.num
    WHERE s.hit &gt; 0
    GROUP BY p.title, p.sbnum
    ORDER BY vote_count DESC
</select>

    <!-- 4. 종료된 투표 통계 -->
    <select id="getEndedPolls" resultMap="PollStatisticsResultMap">
    SELECT 
        NULL AS option_text, 
        NULL AS vote_count,
        p.title AS poll_title,
        TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
        CASE 
            WHEN p.allow_multiple = 1 THEN 1
            ELSE 0
        END AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll p
    WHERE p.end_date &lt; SYSDATE
</select>

    <!-- 5. 특정 기간 내 투표 통계 -->
   <select id="getPollRange" resultMap="PollStatisticsResultMap">
    SELECT 
        NULL AS option_text, 
        NULL AS vote_count,
        p.title AS poll_title,
        TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
        CASE 
            WHEN p.allow_multiple = 1 THEN 1
            ELSE 0
        END AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll p
    WHERE p.end_date &gt; SYSDATE - 7 AND p.end_date &lt; SYSDATE
</select>
    <!-- 6. 최다 득표 옵션 -->
    <select id="getTopVotedOptions" resultMap="PollStatisticsResultMap">
    SELECT 
        po.text AS option_text,
        MAX(NVL(po.votes, 0)) AS vote_count,
        p.title AS poll_title,
        TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
        CASE 
            WHEN p.allow_multiple = 1 THEN 1
            ELSE 0
        END AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll_option po
    LEFT JOIN poll p ON po.poll_id = p.id
    WHERE po.text IS NOT NULL
    GROUP BY po.text, p.title, p.end_date, p.allow_multiple, p.sbnum
</select>

    <!-- 7. 총 득표 수 -->
    <select id="getTotalVotes" resultMap="PollStatisticsResultMap">
    SELECT 
        NULL AS option_text, 
        SUM(NVL(po.votes, 0)) AS vote_count,
        p.title AS poll_title,
        TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
        CASE 
            WHEN p.allow_multiple = 1 THEN 1
            ELSE 0
        END AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll_option po
    LEFT JOIN poll p ON po.poll_id = p.id
    GROUP BY p.title, p.end_date, p.allow_multiple, p.sbnum
</select>

    <!-- 8. 활성 옵션 수 -->
   <select id="getActiveOptionCount" resultMap="PollStatisticsResultMap">
    SELECT 
        NULL AS option_text, 
        COUNT(po.id) AS vote_count,
        p.title AS poll_title,
        TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
        CASE 
            WHEN p.allow_multiple = 1 THEN 1
            ELSE 0
        END AS allow_multiple,
        p.sbnum AS sbnum
    FROM poll_option po
    LEFT JOIN poll p ON po.poll_id = p.id
    WHERE NVL(po.votes, 0) &gt; 0
    GROUP BY p.title, p.end_date, p.allow_multiple, p.sbnum
</select>

 <!-- 9. 최근 2주일간 핫한 투표 상위 20 -->
<select id="getRecentHotPollsTwoWeeks" resultMap="PollStatisticsResultMap">
    SELECT *
    FROM (
        SELECT 
            p.title AS poll_title,
            SUM(po.votes) AS vote_count,
            TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
            p.allow_multiple AS allow_multiple,
            p.sbnum AS sbnum,
            ROW_NUMBER() OVER (ORDER BY SUM(po.votes) DESC) AS rownum_alias
        FROM poll p
        INNER JOIN poll_option po ON p.id = po.poll_id
        WHERE p.end_date &gt;= SYSDATE - 14 OR p.end_date IS NULL
        GROUP BY p.title, p.end_date, p.allow_multiple, p.sbnum
    ) 
    WHERE rownum_alias &lt;= 20
</select>

<select id="getOldestPolls" resultMap="PollStatisticsResultMap">
    SELECT *
    FROM (
        SELECT 
            p.title AS poll_title,
            SUM(po.votes) AS vote_count,
            TO_CHAR(p.end_date, 'YYYY-MM-DD HH24:MI:SS') AS end_date,
            p.allow_multiple AS allow_multiple,
            p.sbnum AS sbnum
        FROM poll p
        LEFT JOIN poll_option po ON p.id = po.poll_id
        GROUP BY p.title, p.end_date, p.allow_multiple, p.sbnum
        ORDER BY p.end_date ASC
    )
    WHERE ROWNUM &lt;= 20
</select>



</mapper>